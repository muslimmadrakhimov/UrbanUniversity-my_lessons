# Базовый класс для животных
class Animal:
    alive = True  # Атрибут класса: все животные изначально живы
    fed = False   # Атрибут класса: все животные по умолчанию голодные
    
    def __init__(self, name):
        """
        Инициализация животного с индивидуальным именем.
        Атрибуты 'alive' и 'fed' будут унаследованы от класса.
        """
        self.name = name
    
    def eat(self, food):
        """
        Метод для того, чтобы животное могло съесть пищу (растение).
        Если растение съедобное (food.edible == True), животное становится сытым.
        Если растение несъедобное (food.edible == False), животное умирает.
        """
        if isinstance(food, Plant):  # Проверяем, что еда - это растение
            if food.edible:
                Animal.fed = True  # Животное сыто
                print(f"{self.name} съел {food.name}")
            else:
                Animal.alive = False  # Животное умирает
                print(f"{self.name} не стал есть {food.name} и погиб")
        else:
            print(f"{self.name} не может есть это!")

# Базовый класс для растений
class Plant:
    edible = False  # Атрибут класса: все растения по умолчанию несъедобны
    
    def __init__(self, name):
        """
        Инициализация растения с индивидуальным именем.
        Атрибут 'edible' будет унаследован от класса.
        """
        self.name = name

# Класс Млекопитающее (наследник Animal)
class Mammal(Animal):
    """
    Наследуем все атрибуты и методы от класса Animal.
    """
    pass

# Класс Хищник (наследник Animal)
class Predator(Animal):
    """
    Наследуем все атрибуты и методы от класса Animal.
    """
    pass

# Класс Цветок (наследник Plant)
class Flower(Plant):
    """
    Наследуем все атрибуты и методы от класса Plant.
    Цветы несъедобны, поэтому edible остается False.
    """
    pass

# Класс Фрукт (наследник Plant)
class Fruit(Plant):
    """
    Переопределяем атрибут edible, так как фрукты съедобны.
    """
    edible = True  # Фрукты съедобные

# Тестирование программы

# Создаем объекты классов животных и растений
a1 = Predator('Волк с Уолл-Стрит')  # Создаем хищника
a2 = Mammal('Хатико')  # Создаем млекопитающее
p1 = Flower('Цветик семицветик')  # Создаем несъедобный цветок
p2 = Fruit('Заводной апельсин')  # Создаем съедобный фрукт

# Вывод имени животных и растений
print(a1.name)  # Вывод имени хищника: Волк с Уолл-Стрит
print(p1.name)  # Вывод имени цветка: Цветик семицветик

# Проверка состояния перед тем, как животные попробуют поесть
print(Animal.alive)  # Животные живы (True)
print(Animal.fed)    # Животные голодны (False)

# Попытка хищника съесть несъедобный цветок
a1.eat(p1)  # Волк с Уолл-Стрит не стал есть Цветик семицветик и погиб

# Попытка млекопитающего съесть съедобный фрукт
a2.eat(p2)  # Хатико съел Заводной апельсин

# Проверка состояния после еды
print(Animal.alive)  # Один из животных погиб (False)
print(Animal.fed)    # Второе животное накормлено (True)

