# Класс Horse описывает лошадь, которая может двигаться по земле (по оси X).
class Horse:
    def __init__(self):
        # Атрибут для хранения пройденного расстояния по оси X (по умолчанию 0)
        self.x_distance = 0
        # Атрибут для хранения звука, который издает лошадь
        self.sound = 'Frrr'

        # Метод для изменения пройденного расстояния по оси X

    def run(self, dx):
        # Прибавляем переданное значение dx к пройденному расстоянию
        self.x_distance += dx


# Класс Eagle описывает орла, который может летать (по оси Y).
class Eagle:
    def __init__(self):
        # Атрибут для хранения высоты полета по оси Y (по умолчанию 0)
        self.y_distance = 0
        # Атрибут для хранения звука, который издает орёл
        self.sound = 'I train, eat, sleep, and repeat'

    # Метод для изменения высоты полета по оси Y
    def fly(self, dy):
        # Прибавляем переданное значение dy к высоте полёта
        self.y_distance += dy


# Класс Pegasus наследуется от Horse и Eagle.
# Этот класс объединяет возможность перемещаться как по земле, так и по воздуху.
class Pegasus(Horse, Eagle):
    def __init__(self):
        # Явно вызываем конструктор класса Horse
        Horse.__init__(self)
        # Явно вызываем конструктор класса Eagle
        Eagle.__init__(self)

        # Метод move отвечает за перемещение пегаса как по земле (по X), так и по воздуху (по Y).

    def move(self, dx, dy):
        # Вызываем метод run от класса Horse для изменения x_distance
        self.run(dx)
        # Вызываем метод fly от класса Eagle для изменения y_distance
        self.fly(dy)

        # Метод get_pos возвращает текущее положение пегаса в виде кортежа (x_distance, y_distance)

    def get_pos(self):
        # Возвращаем пройденное расстояние по X и Y как кортеж
        return (self.x_distance, self.y_distance)

    # Метод voice выводит звук, который унаследован от классов родителей.
    # Поскольку Eagle идет вторым по порядку наследования, звук берётся от него.
    def voice(self):
        # Выводим атрибут sound, который взят из класса Eagle по MRO
        print(self.sound)


# Пример использования:

# Создаем объект класса Pegasus
p1 = Pegasus()

# Выводим начальную позицию пегаса (он ещё не двигался)
print(p1.get_pos())  # Ожидаемый вывод: (0, 0)

# Перемещаем пегаса на 10 единиц по земле (по X) и на 15 единиц по воздуху (по Y)
p1.move(10, 15)
print(p1.get_pos())  # Ожидаемый вывод: (10, 15)

# Перемещаем пегаса на -5 единиц назад по земле и на 20 единиц вверх
p1.move(-5, 20)
print(p1.get_pos())  # Ожидаемый вывод: (5, 35)

# Выводим звук, который издаёт пегас (по порядку наследования — от орла)
p1.voice()  # Ожидаемый вывод: I train, eat, sleep, and repeat
